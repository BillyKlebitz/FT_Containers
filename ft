MAP TESTS:
\\\\\\\\\

Constructor test:
1)map<char,int> first;
	first['a']=10;
	first['b']=30;
	first['c']=50;
	first['d']=70;
2)map<char,int> second (first.begin(),first.end());
	first == second: 0
3)map<char,int> third (second);
4)map<char,int,classcomp> fourth;
5)map<char,int,bool(*)(char,char)> fifth (fn_pt);


Destructor test:
No errors ans no leaks -> all is ok

Operator equals test:
Size of first: 0
Size of second: 3

Begin - end test:
a => 200

b => 100

c => 300

Rbegin - rend test:
z => 300

y => 200

x => 100

Empty test:
a => 10
b => 20
c => 30

Size test:
mymap.size() is 3

Max size test:
The map contains 1000 elements.
operator brackets test:
mymap['a'] is an element
mymap['b'] is another element
mymap['c'] is another element
mymap['d'] is 
mymap now contains 4 elements.

Insert test:
element 'z' already existed with a value of 200
mymap contains:
a => 100
b => 300
c => 400
z => 200
anothermap contains:
a => 100
b => 300

Erase test:
a => 10
d => 40

Swap test:
foo contains:
a => 11
b => 22
c => 33
bar contains:
x => 100
y => 200

Clear test:
mymap contains:
x => 100
y => 200
z => 300
mymap contains:
a => 1101
b => 2202

/////////
